{
  "name": "Rust",
  "slug": "rust",
  "version": "1.x",
  "quick_start": [
    {"title": "Install Rust", "description": "Install with rustup.", "code": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nsource $HOME/.cargo/env\nrustc --version"},
    {"title": "New project", "description": "Create and run a binary crate.", "code": "cargo new hello && cd hello\ncargo run"},
    {"title": "Add a dependency", "description": "Use Cargo to manage crates.", "code": "# In Cargo.toml add under [dependencies]\nserde = \"1\"\nserde_json = \"1\"\n# Example main.rs using serde_json\nuse serde_json::json;\nfn main(){ let v = json!({\"ok\": true}); println!(\"{}\", v); }"}
  ],
  "common_tasks": [
    {"group": "I/O", "tasks": [
      {"title": "Read a file", "description": "Read text into String.", "code": "use std::fs;\nfn main(){ let s = fs::read_to_string(\"README.md\").unwrap(); println!(\"{}\", &s[..s.len().min(200)]); }"},
      {"title": "Write JSON", "description": "Serialize with serde_json.", "code": "use serde_json::json; use std::fs;\nfn main(){ let v = json!({\"ok\": true, \"items\": [1,2,3]}); fs::write(\"data.json\", v.to_string()).unwrap(); }"}
    ]},
    {"group": "HTTP + APIs", "tasks": [
      {"title": "GET JSON (reqwest)", "description": "Async fetch and parse JSON.", "code": "#[tokio::main]\nasync fn main(){ let v: serde_json::Value = reqwest::get(\"https://httpbin.org/json\").await.unwrap().json().await.unwrap(); println!(\"{}\", v); }"}
    ]}
  ],
  "stdlib": [
    {"name": "std::fs", "description": "Filesystem."},
    {"name": "std::io", "description": "I/O traits and types."},
    {"name": "std::time", "description": "Time and durations."},
    {"name": "std::thread", "description": "Threads."}
  ],
  "tools": [
    {"name": "rustup", "description": "Toolchain manager"},
    {"name": "cargo", "description": "Build/test/package manager"},
    {"name": "rustfmt", "description": "Formatter"}
  ],
  "links": [
    {"title": "The Rust Book", "url": "https://doc.rust-lang.org/book/"},
    {"title": "std docs", "url": "https://doc.rust-lang.org/std/"},
    {"title": "crates.io", "url": "https://crates.io/"}
  ],
  "builtins": [
    {"name": "println!", "kind": "macro", "signature": "println!(format...)", "description": "Print with newline."},
    {"name": "print!", "kind": "macro", "signature": "print!(format...)", "description": "Print without newline."},
    {"name": "format!", "kind": "macro", "signature": "format!(format, args...)", "description": "Create a formatted String."},
    {"name": "dbg!", "kind": "macro", "signature": "dbg!(expr)", "description": "Print debug representation and pass through value."},
    {"name": "vec!", "kind": "macro", "signature": "vec![elems]", "description": "Create a Vec."},
    {"name": "Option", "kind": "enum", "signature": "Option<T>", "description": "Optional values (Some/None)."},
    {"name": "Result", "kind": "enum", "signature": "Result<T,E>", "description": "Error handling (Ok/Err)."}
  ]
}

